modis_files
modis_dir<-"./Documents/PhD/Tasman/MCD43"
modis_files <- list.files(path = modis_dir, full.names = TRUE)
modis_files
as.int("2")
as.integer("2")
modis_data <- terra::sds(modis_files[as.integer("2"))
modis_data <- terra::sds(modis_files[as.integer("2")])
modis_data
modis_data <- terra::sds(modis_files[as.integer("1")])
modis_data
coords
clust <- uclass(grd = landsat_data, coords = coords,#
  cluster_n = 6, iter.max = 1000, nstart = 10, algorithm = "Lloyd")
clust
plot(clust)
clust <- uclass(grd = landsat_data, coords = coords,#
  cluster_n = 13, iter.max = 1000, nstart = 10, algorithm = "Lloyd")
clust
plot(clust)
an_blue <- AN_ratios(landsat_clusters = clust, SAA = SAA, SZA = SZA, VAA = VAA, VZA = VZA,#
  MODIS_data = modis_data, MODIS_band = 13, MODIS_QA_band = 3,#
  br = 1.0, hb = 2.0, out = "table")
source("../R_code/albedo_MODISLandsat_functions.R")
source("./Documents/PhD/R_Code/albedo_MODISLandsat_functions.R")
an_blue <- AN_ratios(landsat_clusters = clust, SAA = SAA, SZA = SZA, VAA = VAA, VZA = VZA,#
  MODIS_data = modis_data, MODIS_band = 13, MODIS_QA_band = 3,#
  br = 1.0, hb = 2.0, out = "table")
an_blue
modis_data
modis_data[1]
plot(modis_data[1])
clust2 <- uclass(grd = landsat_data, cluster_n = 10,#
  iter.max = 1000, nstart = 10, algorithm = "Lloyd")
clust2
plot(clust2)
an_blue <- AN_ratios(landsat_clusters = clust2, SAA = SAA, SZA = SZA, VAA = VAA, VZA = VZA,#
  MODIS_data = modis_data, MODIS_band = 13, MODIS_QA_band = 3,#
  br = 1.0, hb = 2.0, out = "table")
clust <- uclass(grd = landsat_data, coords = coords,#
  cluster_n = 10, iter.max = 1000, nstart = 10, algorithm = "Lloyd")
an_blue <- AN_ratios(landsat_clusters = clust, SAA = SAA, SZA = SZA, VAA = VAA, VZA = VZA,#
  MODIS_data = modis_data, MODIS_band = 13, MODIS_QA_band = 3,#
  br = 1.0, hb = 2.0, out = "table")
an_blue
an_blue <- AN_ratios(landsat_clusters = clust, SAA = SAA, SZA = SZA, VAA = VAA, VZA = VZA,#
  MODIS_data = modis_data, MODIS_band = 13, MODIS_QA_band = 3,#
  br = 1.0, hb = 2.0, out = "raster")
an_blue
plot(an_blue[[1]])
plot(an_blue[[2]])
clust2
landsat_data[[1]]
plot(landsat_data[[1]])
landsat_data[[1]]
clust2
source("./Documents/PhD/R_Code/albedo_MODISLandsat_functions.R")
an_blue
an_blue <- AN_ratios(landsat_clusters = clust, SAA = SAA, SZA = SZA, VAA = VAA, VZA = VZA,#
  MODIS_data = modis_data, MODIS_band = 13, MODIS_QA_band = 3,#
  br = 1.0, hb = 2.0, out = "table")
alpha_blue <- albedo_spectral_LandMod(AN_band = an_blue, landsat_clusters = clust2,#
  landsat_band = landsat_data[[1]])
alpha_blue
plot(alpha_blue[[1]])
plot(alpha_blue[[2]])
clust1 <- uclass(grd = landsat_data, coords = coords,#
  cluster_n = 6, iter.max = 1000, nstart = 10, algorithm = "Lloyd")
clust2 <- uclass(grd = landsat_data, coords = coords,#
  cluster_n = 12, iter.max = 1000, nstart = 10, algorithm = "Lloyd")
clust6<-clust1
clust6
clust12<-clust2
clust12
clust18 <- uclass(grd = landsat_data, coords = coords,#
  cluster_n = 18, iter.max = 1000, nstart = 10, algorithm = "Lloyd")
clust18
plot(clust18)
?cars
library(ggplot)#
data(cars)#
cars$speed <- cars$speed * 1.60934#
cars$dist <- cars$dist * 0.3048
cars$dits
cars$dist
ggplot() +#
	geom_point(data=cars, aes=(x=speed, y=dist))
cars
library(ggplot)
library()
install.packages("ggplot")
install.packages("ggplot2")
library(ggplot2)
ggplot() +#
	geom_point(data=cars, aes=(x=speed, y=dist)) +#
	xlab('Speed (km/h)') + ylab('Stopping distance (m)') +#
	theme_minimal(base_size=15)
ggplot() +#
	geom_point(data=cars, (aes(x=speed, y=dist))) +#
	xlab('Speed (km/h)') + ylab('Stopping distance (m)') +#
	theme_minimal(base_size=15)
m <- lm(dist ~ 0+I(speed^2), data=cars)
summary(m)
ggplot() +#
	geom_point(data=cars, (aes(x=speed, y=dist))) +#
	xlab('Speed (km/h)') + ylab('Stopping distance (m)') +#
	theme_minimal(base_size=15)
d.pred <- data.frame(speed=seq(0,70,length.out=100))#
predict(m,newdata=d.pred,interval='confidence')
?predict
z <- predict(m,newdata=d.pred,interval='prediction')#
d.pred$est <- z[,1]#
d.pred$pi.lo <- z[,2]#
d.pred$pi.up <- z[,3]
z
ggplot() +#
	geom_point(data=cars, (aes(x=speed, y=dist))) +#
	#confidence intervals#
	geom_ribbon(data=d.pred,aes(x=speed,ymin=ci.lo,ymax=ci.up),#
		fill='salmon',alpha=0.8) +#
	#predictive intervals#
	geom_ribbon(data=d.pred,aes(x=speed,ymin=pi.lo,ymax=pi.up),#
		fill='blue',alpha=0.2) +#
	#fitted line#
	geom_line(data=d.pred,aes(x=speed,y=est),col='blue',lwd=2) +	#
	xlab('Speed (km/h)') + ylab('Stopping distance (m)') +#
	theme_minimal(base_size=15)
d.pred
z <- predict(m,newdata=d.pred,interval='confidence')#
d.pred$est <- z[,1]#
d.pred$ci.lo <- z[,2]#
d.pred$ci.up <- z[,3]
z <- predict(m,newdata=d.pred,interval='prediction')#
d.pred$est <- z[,1]#
d.pred$pi.lo <- z[,2]#
d.pred$pi.up <- z[,3]
d.pred
ggplot() +#
	geom_point(data=cars, (aes(x=speed, y=dist))) +#
	#confidence intervals#
	geom_ribbon(data=d.pred,aes(x=speed,ymin=ci.lo,ymax=ci.up),#
		fill='salmon',alpha=0.8) +#
	#predictive intervals#
	geom_ribbon(data=d.pred,aes(x=speed,ymin=pi.lo,ymax=pi.up),#
		fill='blue',alpha=0.2) +#
	#fitted line#
	geom_line(data=d.pred,aes(x=speed,y=est),col='blue',lwd=2) +	#
	xlab('Speed (km/h)') + ylab('Stopping distance (m)') +#
	theme_minimal(base_size=15)
ls()
rm(list=ls())
ls()
q()
library(terra)
f <- system.file("ex/logo.tif", package = "terra")#
r <- rast(f)
r
plot(r)
km <- k_means(r, centers=5)
km
plot(km)
??kmeans
q()
??data.frame
L3 <- LETTERS[1:3]#
char <- sample(L3, 10, replace = TRUE)#
(d <- data.frame(x = 1, y = 1:10, char = char))
d
class(d)
d$x
d[1,3]
save(d,file="./Documents/PhD/Tasman/test/df.RData")
ls()
load("./Documents/PhD/Tasman/test/df.RData")
ls()
class(d)
d
??data.frame
?time
library(SunCalcMeeus)
??irrad_extraterrestrial
t <- c(#
  "2020-02-24 22:19", "2023-02-16 22:20", "2020-02-26 22:38",#
  "2021-03-12 22:38", "2022-02-15 22:38", "2023-02-20 22:38"#
)#
site <- c(#
  "Tasman Neve AWS", "TG RedAWS", "Tasman Neve AWS",#
  "Tasman Saddle AWS", "Tasman Saddle AWS", "TG RedAWS"#
)#
lon <- c(170.35, 170.3502, 170.35, 170.35, 170.3594, 170.3502)#
lat <- c(-43.5143, -43.5139, -43.5143, -43.51, -43.5139, -43.5139)#
SW_meas <- c(821.0, 818.0, 317.3, 777.5, 936.0, 865.0)#
df <- data.frame(SW_meas, t, lon, lat, site)
df
df$t
class(df$t)
df$SW_meas
class(df$SW_meas)
df$site
class(df$site)
df
df$SW_meas
df$SW_meas[1]
df$SW_meas[7]
df$SW_meas[6]
df$SW_meas[5]
df
df$t[1]
df$lon
df$lat
df$s
df$site
q()
??print
n<-3
print("The values is ", n)
n
n<-3
??print
print(paste0("The values is "), n)
print(paste0("The values is ", n))
print(paste0("Computation number ", n))
q()
library(SatRbedo)
??albedo_sat
q()
library(luna)#
library(terra)
product <- "MCD43A1"
sdate <- "2015-05-01"#
edate <- "2016-10-01"#
e <- terra::ext(427035, 509745, 5755275, 5800005)#
e_new <- terra::project(#
  e, from = "+proj=utm +zone=11 +ellps=WGS84 +units=m +no_defs +type=crs",#
  to = "+proj=longlat +datum=WGS84 +no_defs"#
)
e_new
datadir <- "/Users/pablo/Documents/PhD/Athabasca/MCD43"#
usr <- "pablo.fuchs"#
pwd <- "Pfadfindern02"
#Check available MODIS data:#
#mod_data <- luna::getNASA(#
#  product = product, start_date = sdate, end_date = edate, aoi = e_new, download = FALSE#
#)
#Check available MODIS data:#
mod_data <- luna::getNASA(#
  product = product, start_date = sdate, end_date = edate, aoi = e_new, download = FALSE#
)
mod_data
sdate <- "2015-05-01"#
edate <- "2015-05-10"
#Check available MODIS data:#
mod_data <- luna::getNASA(#
  product = product, start_date = sdate, end_date = edate, aoi = e_new, download = FALSE#
)
mod_data
mod_data <- luna::getNASA(#
	product = product, start_date = sdate, end_date = edate, aoi = e_new,#
	download = TRUE, overwrite = TRUE, path = datadir, username = usr, password = pwd#
)
mod_data
mod_data <- luna::getNASA(#
 product = product, start_date = sdate, end_date = edate, aoi = e_new, download = FALSE#
)
mod_data
??getNASA
sdate <- "2016-05-20"#
edate <- "2016-06-01"
mod_data <- luna::getNASA(#
	product = product, start_date = sdate, end_date = edate, aoi = e_new,#
	download = TRUE, overwrite = TRUE, path = datadir, username = usr, password = pwd#
)
sdate <- "2016-09-05"#
edate <- "2016-09-06"
mod_data <- luna::getNASA(#
	product = product, start_date = sdate, end_date = edate, aoi = e_new,#
	download = TRUE, overwrite = TRUE, path = datadir, username = usr, password = pwd#
)
sdate <- "2017-08-05"#
edate <- "2017-08-06"
mod_data <- luna::getNASA(#
	product = product, start_date = sdate, end_date = edate, aoi = e_new,#
	download = TRUE, overwrite = TRUE, path = datadir, username = usr, password = pwd#
)
sdate <- "2017-10-04"#
edate <- "2017-10-04"
mod_data <- luna::getNASA(#
	product = product, start_date = sdate, end_date = edate, aoi = e_new,#
	download = TRUE, overwrite = TRUE, path = datadir, username = usr, password = pwd#
)
sdate <- "2018-03-18"#
edate <- "2018-04-18"
mod_data <- luna::getNASA(#
	product = product, start_date = sdate, end_date = edate, aoi = e_new,#
	download = TRUE, overwrite = TRUE, path = datadir, username = usr, password = pwd#
)
sdate <- "2018-05-02"#
edate <- "2018-06-12"
mod_data <- luna::getNASA(#
	product = product, start_date = sdate, end_date = edate, aoi = e_new,#
	download = TRUE, overwrite = TRUE, path = datadir, username = usr, password = pwd#
)
e_new
sdate <- "2019-06-05"#
edate <- "2019-06-05"
mod_data <- luna::getNASA(#
	product = product, start_date = sdate, end_date = edate, aoi = e_new,#
	download = TRUE, overwrite = TRUE, path = datadir, username = usr, password = pwd#
)
sdate <- "2019-06-04"#
edate <- "2019-06-04"
mod_data <- luna::getNASA(#
	product = product, start_date = sdate, end_date = edate, aoi = e_new,#
	download = TRUE, overwrite = TRUE, path = datadir, username = usr, password = pwd#
)
sdate <- "2019-07-30"#
edate <- "2019-08-20"
mod_data <- luna::getNASA(#
	product = product, start_date = sdate, end_date = edate, aoi = e_new,#
	download = TRUE, overwrite = TRUE, path = datadir, username = usr, password = pwd#
)
sdate <- "2019-07-30"#
edate <- "2019-08-31"
mod_data <- luna::getNASA(#
	product = product, start_date = sdate, end_date = edate, aoi = e_new,#
	download = TRUE, overwrite = TRUE, path = datadir, username = usr, password = pwd#
)
sdate <- "2019-07-29"#
edate <- "2019-07-29"
mod_data <- luna::getNASA(#
	product = product, start_date = sdate, end_date = edate, aoi = e_new,#
	download = TRUE, overwrite = TRUE, path = datadir, username = usr, password = pwd#
)
sdate <- "2019-08-21"#
edate <- "2019-08-29"
mod_data <- luna::getNASA(#
	product = product, start_date = sdate, end_date = edate, aoi = e_new,#
	download = TRUE, overwrite = TRUE, path = datadir, username = usr, password = pwd#
)
sdate <- "2020-03-25" #Set 'sdate' to 7 days after the desired date#
edate <- "2020-03-25" #Set 'edate' to 8 days before the desired date
mod_data <- luna::getNASA(#
	product = product, start_date = sdate, end_date = edate, aoi = e_new,#
	download = TRUE, overwrite = TRUE, path = datadir, username = usr, password = pwd#
)
sdate <- "2020-05-26" #Set 'sdate' to 7 days after the desired date#
edate <- "2020-05-26"
mod_data <- luna::getNASA(#
	product = product, start_date = sdate, end_date = edate, aoi = e_new,#
	download = TRUE, overwrite = TRUE, path = datadir, username = usr, password = pwd#
)
sdate <- "2020-08-02" #Set 'sdate' to 7 days after the desired date#
edate <- "2020-08-08"
mod_data <- luna::getNASA(#
	product = product, start_date = sdate, end_date = edate, aoi = e_new,#
	download = TRUE, overwrite = TRUE, path = datadir, username = usr, password = pwd#
)
sdate <- "2020-09-16" #Set 'sdate' to 7 days after the desired date#
edate <- "2020-09-16"
mod_data <- luna::getNASA(#
	product = product, start_date = sdate, end_date = edate, aoi = e_new,#
	download = TRUE, overwrite = TRUE, path = datadir, username = usr, password = pwd#
)
sdate
edate
mod_data <- luna::getNASA(#
	product = product, start_date = sdate, end_date = edate, aoi = e_new,#
	download = TRUE, overwrite = TRUE, path = datadir, username = usr, password = pwd#
)
q()
library(luna)#
library(terra)
product <- "MCD43A1"
sdate <- "2020-09-16" #Set 'sdate' to 7 days after the desired date#
edate <- "2020-09-16" #Set 'edate' to 8 days before the desired date#
e <- terra::ext(427035, 509745, 5755275, 5800005)#
e_new <- terra::project(#
  e, from = "+proj=utm +zone=11 +ellps=WGS84 +units=m +no_defs +type=crs",#
  to = "+proj=longlat +datum=WGS84 +no_defs"#
)#
datadir <- "/Users/pablo/Documents/PhD/Athabasca/MCD43"#
usr <- "pablo.fuchs"#
pwd <- "Pfadfindern02"
mod_data <- luna::getNASA(#
 product = product, start_date = sdate, end_date = edate, aoi = e_new, download = FALSE#
)
q()
library(luna)#
library(terra)
product <- "MCD43A1"
sdate <- "2020-09-16" #Set 'sdate' to 7 days after the desired date#
edate <- "2020-09-16" #Set 'edate' to 8 days before the desired date#
e <- terra::ext(427035, 509745, 5755275, 5800005)#
e_new <- terra::project(#
  e, from = "+proj=utm +zone=11 +ellps=WGS84 +units=m +no_defs +type=crs",#
  to = "+proj=longlat +datum=WGS84 +no_defs"#
)#
datadir <- "/Users/pablo/Documents/PhD/Athabasca/MCD43"#
usr <- "pablo.fuchs"#
pwd <- "Pfadfindern02"
mod_data <- luna::getNASA(#
	product = product, start_date = sdate, end_date = edate, aoi = e_new,#
	download = TRUE, overwrite = TRUE, path = datadir, username = usr, password = pwd#
)
e_new
mod_data <- luna::getNASA(#
  product = product, start_date = sdate, end_date = edate, aoi = e_new, download = FALSE#
)
mod_data
mod_data <- luna::getNASA(#
	product = product, start_date = sdate, end_date = edate, aoi = e_new,#
	download = TRUE, overwrite = TRUE, path = datadir, username = usr, password = pwd#
)
q()
modis_dir <- "./Documents/PhD/Athabasca/MCD43"
modis_files <- list.files(path = modis_dir, full.names = TRUE)
modis_files
modis_data <- terra::sds(modis_files[40])
modis_data
modis_data[[1]]
modis_data[[12]]
library(terra)
writeRaster(modis_data[[12]],filename="./Documents/PhD/Athabasca/modis.tif")
768/2
384*50
q()
library(SatRbedo)
??f_BRDF
library(terra)
blue_SR <- system.file("extdata/athabasca_B02_20200911.tif", package = "SatRbedo") # blue band surface reflectance#
green_SR <- system.file("extdata/athabasca_B03_20200911.tif", package = "SatRbedo") # green band surface reflectance#
red_SR <- system.file("extdata/athabasca_B04_20200911.tif", package = "SatRbedo") # red band surface reflectance#
NIR_SR <- system.file("extdata/athabasca_B8A_20200911.tif", package = "SatRbedo") # near-infrared band surface reflectance#
SWIR1_SR <- system.file("extdata/athabasca_B11_20200911.tif", package = "SatRbedo") # shortwave-infrared band 1 surface reflectance#
SWIR2_SR <- system.file("extdata/athabasca_B12_20200911.tif", package = "SatRbedo")
dem <- system.file("extdata/athabasca_dem.tif", package = "SatRbedo")#
outline <- system.file("extdata/athabasca_outline.shp", package = "SatRbedo")
dem <- terra::rast(dem)#
blue <- preproc(grd = blue_SR, outline = outline)#
green <- preproc(grd = green_SR, outline = outline)#
red <- preproc(grd = red_SR, outline = outline)#
nir <- preproc(grd = NIR_SR, outline = outline)#
swir1 <- preproc(grd = SWIR1_SR, outline = outline)#
swir2 <- preproc(grd = SWIR2_SR, outline = outline)
plot(red)
SAA <- 164.8 # solar azimuth angle#
SZA <- 48.9 # solar zenith angle#
blue <- topo_corr(blue, dem, SAA, SZA)#
green <- topo_corr(green, dem, SAA, SZA)#
red <- topo_corr(red, dem, SAA, SZA)#
nir <- topo_corr(nir, dem, SAA, SZA)#
swir1 <- topo_corr(swir1, dem, SAA, SZA)#
swir2 <- topo_corr(swir2, dem, SAA, SZA)
swir2
plot(green$bands[[2]])
SAA <- 164.8 # solar azimuth angle#
SZA <- 48.9 # solar zenith angle#
VAA <- 90.9 # view azimuth angle#
VZA <- 5.2 # view zenith angle#
slope <- terra::terrain(dem, v = "slope", neighbors = 4, unit = "degrees")#
aspect <- terra::terrain(dem, v = "aspect", neighbors = 4, unit = "degrees")#
threshold <- snow_or_ice(green$bands[[2]], nir$bands[[2]])$th
threshold
broadband_albedo <- albedo_sat(#
  SAA, SZA, VAA, VZA,#
  slope, aspect, method = "fivebands",#
  blue = blue$bands[[2]], green = green$bands[[2]], red = red$bands[[2]],#
  NIR = nir$bands[[2]], SWIR1 = swir1$bands[[2]], SWIR2 = swir2$bands[[2]],#
  th = threshold#
)
broadband_albedo
plot(broadband_albedo[[6]]
)
)
plot(broadband_albedo[[6]])
library(devtools)
build_readme()
proj_activate("./Documents/PhD/SatRbedo/")
build_readme()
build_readme()
q()
