[{"path":[]},{"path":"https://pabl1t0x.github.io/SatRbedo/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement pablofuchs_llama@hotmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing","title":"Contributing","text":"Thank interest contributing SatRbedo! ensure smooth experience, please review guidelines provided .","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/CONTRIBUTING.html","id":"community-code-of-conduct","dir":"","previous_headings":"","what":"Community Code of Conduct","title":"Contributing","text":"participating SatRbedo community, expected uphold Code Conduct, defines standards positive constructive environment.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/CONTRIBUTING.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to contribute","title":"Contributing","text":"can contribute SatRbedo : Reporting fixing issue. Reviewing Pull Request. Suggesting new features. Updating package function documentation. Writing updating test functions. Writing tutorials (vignettes). contributions, please respect following guidelines: Check spelling grammar. Search previous suggestions making new one, may duplicate. Make individual pull request suggestion. pull request commit useful title. open criticism improve code. Please use Tydiverse Google’s R style guide.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://pabl1t0x.github.io/SatRbedo/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"SatRbedo: Tools for retrieving snow and ice albedo from optical satellite imagery. Copyright (C) 2025  Pablo Fuchs  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. SatRbedo  Copyright (C) 2025  Pablo Fuchs This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://pabl1t0x.github.io/SatRbedo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pablo Fuchs. Author, maintainer. Ruzica Dadic. Contributor, thesis advisor. Shelley MacDonell. Contributor, thesis advisor. Heather Purdie. Contributor, thesis advisor. Brian Anderson. Contributor, thesis advisor. Marwan Katurji. Contributor, thesis advisor. Javier Corripio. Copyright holder.           Author vectorial algebra algorithms used \t\t  detect topographic shadows","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fuchs P, Dadic R, MacDonell S, Purdie H, Anderson B, Katurji M (2025). SatRbedo: R package retrieving snow ice albedo optical satellite imagery. R package version 1.0, https://github.com/pabl1t0x/SatRbedo.","code":"@Manual{,   title = {SatRbedo: An R package for retrieving snow and ice albedo from optical satellite imagery},   author = {Pablo Fuchs and Ruzica Dadic and Shelley MacDonell and Heather Purdie and Brian Anderson and Marwan Katurji},   year = {2025},   note = {R package version 1.0},   url = {https://github.com/pabl1t0x/SatRbedo}, }"},{"path":"https://pabl1t0x.github.io/SatRbedo/index.html","id":"satrbedo","dir":"","previous_headings":"","what":"Tools for Retrieving Snow and Ice Albedo from Optical Satellite Imagery","title":"Tools for Retrieving Snow and Ice Albedo from Optical Satellite Imagery","text":"SatRbedo package consists set tools retrieving snow ice albedo optical satellite imagery (e.g., Landsat Sentinel-2). SatRbedo functions require following datasets: Atmospherically corrected surface reflectance (gridded). Satellite (φv\\varphi_v, θv\\theta_v) solar (φs\\varphi_s, θs\\theta_s) azimuth zenith angles (numeric gridded). digital elevation model (DEM) (gridded). outline area interest (shapefile). package includes tools : Image pre-processing: crop grids specified extent, project grids different coordinate systems, convert data integer floating point. Convert nadir satellite observations -nadir values using view-angle corrections. Detect mask topographic shadows. Automatic discrimination snow ice surfaces. Anisotropic correction reflected radiation glacier snow ice using empirical parameterizations bidirectional reflectance distribution function (BRDF). Topographic correction. Narrow--broadband albedo conversion.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Retrieving Snow and Ice Albedo from Optical Satellite Imagery","text":"can install development version SatRbedo GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"pabl1t0x/SatRbedo\")"},{"path":"https://pabl1t0x.github.io/SatRbedo/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Tools for Retrieving Snow and Ice Albedo from Optical Satellite Imagery","text":"Snow ice albedo retrieval satellite imagery four-step workflow includes image pre-processing, topographic anisotropic corrections, narrow--broadband albedo conversion (Fig. 1). Fig. 1 Flowchart satellite albedo retrieval workflow following example shows estimate albedo using surface reflectance data five spectral bands Athabasca Glacier Canada 11 September 2020. Step 1: Load data area interest Step 2: Data pre-processing Step 3: Topographic correction Step 4: Estimation broadband albedo anisotropic correction Fig. 2 Broadband albedo","code":"par(mar=c(1,1,1,1)) # Load the packages library(SatRbedo) library(terra) #> terra 1.8.70  # Load the raw Sentinel-2 surface reflectance data # Note: each spectral band was previously cut out to the extent of the area of interest and renamed blue_SR <- system.file(\"extdata/athabasca_B02_20200911.tif\", package = \"SatRbedo\") # blue band surface reflectance green_SR <- system.file(\"extdata/athabasca_B03_20200911.tif\", package = \"SatRbedo\") # green band surface reflectance red_SR <- system.file(\"extdata/athabasca_B04_20200911.tif\", package = \"SatRbedo\") # red band surface reflectance NIR_SR <- system.file(\"extdata/athabasca_B8A_20200911.tif\", package = \"SatRbedo\") # near-infrared band surface reflectance SWIR1_SR <- system.file(\"extdata/athabasca_B11_20200911.tif\", package = \"SatRbedo\") # shortwave-infrared band 1 surface reflectance SWIR2_SR <- system.file(\"extdata/athabasca_B12_20200911.tif\", package = \"SatRbedo\") # shortwave-infrared band 2 surface reflectance  # Load the DEM and the outline # Note: the DEM was re-projected to the extent of the area of interest dem <- system.file(\"extdata/athabasca_dem.tif\", package = \"SatRbedo\") outline <- system.file(\"extdata/athabasca_outline.shp\", package = \"SatRbedo\") # Transform the input data to SpatRaster and crop to the area of interest dem <- terra::rast(dem) blue <- preproc(grd = blue_SR, outline = outline) green <- preproc(grd = green_SR, outline = outline) red <- preproc(grd = red_SR, outline = outline) nir <- preproc(grd = NIR_SR, outline = outline) swir1 <- preproc(grd = SWIR1_SR, outline = outline) swir2 <- preproc(grd = SWIR2_SR, outline = outline) SAA <- 164.8 # solar azimuth angle SZA <- 48.9 # solar zenith angle blue_corr <- topo_corr(blue, dem, SAA, SZA) green_corr <- topo_corr(green, dem, SAA, SZA) red_corr <- topo_corr(red, dem, SAA, SZA) nir_corr <- topo_corr(nir, dem, SAA, SZA) swir1_corr <- topo_corr(swir1, dem, SAA, SZA) swir2_corr <- topo_corr(swir2, dem, SAA, SZA) SAA <- 164.8 # solar azimuth angle SZA <- 48.9 # solar zenith angle VAA <- 90.9 # view azimuth angle VZA <- 5.2 # view zenith angle slope <- terra::terrain(dem, v = \"slope\", neighbors = 4, unit = \"degrees\") aspect <- terra::terrain(dem, v = \"aspect\", neighbors = 4, unit = \"degrees\") threshold <- snow_or_ice(green, nir)$th # threshold used to discriminate between snow and ice broadband_albedo <- albedo_sat(   SAA, SZA, VAA, VZA,   slope, aspect, method = \"fivebands\",   blue = blue_corr$bands[[2]], green = green_corr$bands[[2]], red = red_corr$bands[[2]],   NIR = nir_corr$bands[[2]], SWIR1 = swir1_corr$bands[[2]], SWIR2 = swir2_corr$bands[[2]],   th = threshold ) # Plot the results plot(broadband_albedo[[6]])"},{"path":"https://pabl1t0x.github.io/SatRbedo/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Tools for Retrieving Snow and Ice Albedo from Optical Satellite Imagery","text":"contributions welcomed. See Contributing Guidelines details.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/index.html","id":"citing","dir":"","previous_headings":"","what":"Citing","title":"Tools for Retrieving Snow and Ice Albedo from Optical Satellite Imagery","text":"Please cite SatRbedo using:","code":"@Manual{,   title = {SatRbedo: An R package for retrieving snow and ice albedo from optical satellite imagery},   author = {Pablo Fuchs and Ruzica Dadic and Shelley MacDonell and Heather Purdie and Brian Anderson and Marwan Katurji},   year = {2025},   note = {R package version 1.0},   url = {https://github.com/pabl1t0x/SatRbedo}, }"},{"path":"https://pabl1t0x.github.io/SatRbedo/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Tools for Retrieving Snow and Ice Albedo from Optical Satellite Imagery","text":"project licensed terms GNU General Public License v3.0. See LICENSE details.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/NDSII_hist.html","id":null,"dir":"Reference","previous_headings":"","what":"NDSII histogram — NDSII_hist","title":"NDSII histogram — NDSII_hist","text":"function creates NDSII histogram vertical line showing selected threshold discriminating snow ice.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/NDSII_hist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NDSII histogram — NDSII_hist","text":"","code":"NDSII_hist(NDSII, th, breaks = 64, stdev = 2)"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/NDSII_hist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NDSII histogram — NDSII_hist","text":"NDSII SpatRaster. Normalized Difference Snow Ice Index (NDSII). th numeric. NDSII threshold discriminate snow ice. breaks one : vector giving breakpoints histogram cells, function compute vector breakpoints, single number giving number cells histogram, character string naming algorithm compute       number cells (see ‘Details’), function compute number cells. last three cases number suggestion ;     breakpoints set pretty values, number     limited 1e6 (warning larger).      breaks function, x vector supplied     argument (number breaks limited     amount available memory). stdev numeric. Standard deviation cutoff value histogram stretching.","code":""},{"path":[]},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/NDSII_hist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NDSII histogram — NDSII_hist","text":"","code":"green <- system.file(\"extdata/athabasca_B03_20200911.tif\", package = \"SatRbedo\") nir <- system.file(\"extdata/athabasca_B8A_20200911.tif\", package = \"SatRbedo\") outline <- system.file(\"extdata/athabasca_outline.shp\", package = \"SatRbedo\") green <- preproc(grd = green, outline = outline) nir <- preproc(grd = nir, outline = outline) res <- snow_or_ice(green, nir) NDSII_hist(res$NDSII, res$th, breaks = 16, stdev = 3)"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/albedo_broad.html","id":null,"dir":"Reference","previous_headings":"","what":"Narrow-to-broadband albedo conversion — albedo_broad","title":"Narrow-to-broadband albedo conversion — albedo_broad","text":"function converts narrowband broadband albedo snow ice surfaces using empirical relationships developed Knap et al. (1999) , Liang (2001) , Feng et al. (2023) .","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/albedo_broad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Narrow-to-broadband albedo conversion — albedo_broad","text":"","code":"albedo_Knap(albedo_green, albedo_NIR, saturated = FALSE)  albedo_Liang(albedo_blue, albedo_red, albedo_NIR, albedo_SWIR1, albedo_SWIR2)  albedo_Feng(albedo_blue, albedo_green, albedo_red, albedo_NIR)"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/albedo_broad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Narrow-to-broadband albedo conversion — albedo_broad","text":"albedo_green SpatRaster. Green band albedo (0.53-0.59 um). albedo_NIR SpatRaster. Near-infrared band albedo (0.85-0.88 um). saturated logical. TRUE, green band saturated, expression function near-infrared band used. albedo_blue SpatRaster. Blue band albedo (0.43-0.45 um). albedo_red SpatRaster. Red band albedo (0.64-0.67 um). albedo_SWIR1 SpatRaster. Shortwave-infrared band albedo (1.57-1.65 um). albedo_SWIR2 SpatRaster. Shortwave-infrared band albedo (2.11-2.29 um).","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/albedo_broad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Narrow-to-broadband albedo conversion — albedo_broad","text":"broadband albedo (.e., albedo integrated entire solar spectrum).","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/albedo_broad.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Narrow-to-broadband albedo conversion — albedo_broad","text":"Feng S, Cook JM, Onuma Y, Naegeli K, Tan W, Anesio , Benning LG, Tranter M (2023). “Remote sensing ice albedo using harmonized Landsat Sentinel 2 datasets: validation.” International Journal Remote Sensing, 1–29. doi:10.1080/01431161.2023.2291000 . Knap WH, Reijmer CH, Oerlemans J (1999). “Narrowband broadband conversion Landsat TM glacier albedos.” International Journal Remote Sensing, 20(10), 2091–2110. doi:10.1080/014311699212362 . Liang S (2001). “Narrowband broadband conversions land surface albedo : Algorithms.” Remote Sensing Environment, 76(2), 213–238. doi:10.1016/S0034-4257(00)00205-4 .","code":""},{"path":[]},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/albedo_broad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Narrow-to-broadband albedo conversion — albedo_broad","text":"","code":"library(terra) #> terra 1.8.70 outline <- system.file(\"extdata/athabasca_outline.shp\", package = \"SatRbedo\") blue <- system.file(\"extdata/athabasca_B02_20200911.tif\", package = \"SatRbedo\") green <- system.file(\"extdata/athabasca_B03_20200911.tif\", package = \"SatRbedo\") red <- system.file(\"extdata/athabasca_B04_20200911.tif\", package = \"SatRbedo\") nir <- system.file(\"extdata/athabasca_B8A_20200911.tif\", package = \"SatRbedo\") swir1 <- system.file(\"extdata/athabasca_B11_20200911.tif\", package = \"SatRbedo\") swir2 <- system.file(\"extdata/athabasca_B12_20200911.tif\", package = \"SatRbedo\") blue <- preproc(blue, outline) green <- preproc(green, outline) red <- preproc(red, outline) nir <- preproc(nir, outline) swir1 <- preproc(swir1, outline) swir2 <- preproc(swir2, outline)  # Broadband albedo using Knap et al. (1999) albedo_Knap(green, nir) #> class       : SpatRaster  #> size        : 207, 216, 1  (nrow, ncol, nlyr) #> resolution  : 30, 30  (x, y) #> extent      : 477840, 484320, 5778300, 5784510  (xmin, xmax, ymin, ymax) #> coord. ref. : WGS 84 / UTM zone 11N (EPSG:32611)  #> source(s)   : memory #> varname     : athabasca_B03_20200911  #> name        :       Green  #> min value   : -0.05468608  #> max value   :  1.05072313   # Broadband albedo using Liang (2001) albedo_Liang(blue, red, nir, swir1, swir2) #> class       : SpatRaster  #> size        : 207, 216, 1  (nrow, ncol, nlyr) #> resolution  : 30, 30  (x, y) #> extent      : 477840, 484320, 5778300, 5784510  (xmin, xmax, ymin, ymax) #> coord. ref. : WGS 84 / UTM zone 11N (EPSG:32611)  #> source(s)   : memory #> varname     : athabasca_B02_20200911  #> name        :       Blue  #> min value   : -0.0753151  #> max value   :  1.0227364   # Broadband albedo using Feng et al. (2023) albedo_Feng(blue, green, red, nir) #> class       : SpatRaster  #> size        : 207, 216, 1  (nrow, ncol, nlyr) #> resolution  : 30, 30  (x, y) #> extent      : 477840, 484320, 5778300, 5784510  (xmin, xmax, ymin, ymax) #> coord. ref. : WGS 84 / UTM zone 11N (EPSG:32611)  #> source(s)   : memory #> varname     : athabasca_B02_20200911  #> name        :      Blue  #> min value   : 0.1658235  #> max value   : 0.8302532"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/albedo_sat.html","id":null,"dir":"Reference","previous_headings":"","what":"Satellite albedo retrieval — albedo_sat","title":"Satellite albedo retrieval — albedo_sat","text":"function calculates narrowband broadband albedo surface reflectance data. albedo retrieval method includes corrections anisotropic behavior reflected radiation field snow ice, narrow--broadband albedo conversion algorithms.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/albedo_sat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Satellite albedo retrieval — albedo_sat","text":"","code":"albedo_sat(   SAA,   SZA,   VAA,   VZA,   slope,   aspect,   method,   blue = NULL,   green = NULL,   red = NULL,   NIR = NULL,   SWIR1 = NULL,   SWIR2 = NULL,   th )"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/albedo_sat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Satellite albedo retrieval — albedo_sat","text":"SAA SpatRaster numeric. Solar azimuth angle degrees. SZA SpatRaster numeric. Solar zenith angle degrees. VAA SpatRaster numeric. Satellite sensor azimuth angle degrees. VZA SpatRaster numeric. Satellite sensor zenith angle degrees. slope SpatRaster numeric. Surface slope degrees. aspect SpatRaster numeric. Surface aspect degrees. method character. Number spectral bands calculate broadband albedo. three options available: \"twobands\" (green near-infrared), \"fourbands\" (blue, green, red, near-infrared), \"fivebands\" (blue, red, near-infrared, shortwave-infrared 1, shortwave-infrared 2). method=\"twobands\" method=\"fivebands\", surface reflectance data corrected anisotropy generating broadband albedo. contrast, method=\"fourbands\" assumes Lambertian reflection converts surface reflectance broadband albedo directly. details examples workflows can found references . blue SpatRaster. Blue band surface reflectance (0.43-0.45 um). Required method=\"fourbands\" method=\"fivebands\". green SpatRaster. Green band surface reflectance (0.53-0.59 um). Required methods. red SpatRaster. Red band surface reflectance (0.64-0.67 um). Required method=\"fourbands\" method=\"fivebands\". NIR SpatRaster. Near-infrared surface reflectance (0.85-0.88 um). Required methods. SWIR1 SpatRaster. Shortwave-infrared surface reflectance (1.57-1.65 um). Required method=\"fivebands\". SWIR2 SpatRaster. Shortwave-infrared surface reflectance (2.11-2.29 um). Required method=\"fivebands\". th numeric. NDSII threshold discriminate snow ice.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/albedo_sat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Satellite albedo retrieval — albedo_sat","text":"Returns SpatRaster four layers method=\"twobands\", five layers method=\"fourbands\" six layers method=\"fivebands\". layers : method=\"twobands\": green NIR narrowband albedo, broadband albedo, quality flags indicating whether broadband albedo calculated using corrected green NIR narrowband albedos (flag=1) NIR albedo (flag=2). Broadband albedo values higher one excluded method. method=\"fourbands\": blue, green, red, NIR surface reflectance broadband albedo. Broadband albedo values higher one lower zero masked . method=\"fivebands\": blue, red, NIR, SWIR1, SWIR2 narrowband albedo, broadband albedo. Broadband albedo values higher one lower zero masked .","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/albedo_sat.html","id":"notes","dir":"Reference","previous_headings":"","what":"Notes","title":"Satellite albedo retrieval — albedo_sat","text":"method=\"fourbands\" used, necessary call following arguments: SAA, SZA, VAA, VZA, slope, aspect, th.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/albedo_sat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Satellite albedo retrieval — albedo_sat","text":"Feng S, Cook JM, Anesio , Benning LG, Tranter M (2023). “Long time series (1984–2020) albedo variations Greenland ice sheet harmonized Landsat Sentinel 2 imagery.” Journal Glaciology, 1–16. doi:10.1017/jog.2023.11 . Klok EJ(, Greuell W, Oerlemans J (2003). “Temporal spatial variation surface albedo Morteratschgletscher, Switzerland, derived 12 Landsat images.” Journal Glaciology, 49(167), 491–502. doi:10.3189/172756503781830395 . Ren S, Miles ES, Jia L, Menenti M, Kneib M, Buri P, McCarthy MJ, Shaw TE, Yang W, Pellicciotti F (2021). “Anisotropy parameterization development evaluation glacier surface albedo retrieval satellite observations.” Remote Sensing, 13(9), 1714. doi:10.3390/rs13091714 .","code":""},{"path":[]},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/albedo_sat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Satellite albedo retrieval — albedo_sat","text":"","code":"library(terra) outline <- system.file(\"extdata/athabasca_outline.shp\", package = \"SatRbedo\") blue <- system.file(\"extdata/athabasca_B02_20200911.tif\", package = \"SatRbedo\") green <- system.file(\"extdata/athabasca_B03_20200911.tif\", package = \"SatRbedo\") red <- system.file(\"extdata/athabasca_B04_20200911.tif\", package = \"SatRbedo\") nir <- system.file(\"extdata/athabasca_B8A_20200911.tif\", package = \"SatRbedo\") swir1 <- system.file(\"extdata/athabasca_B11_20200911.tif\", package = \"SatRbedo\") swir2 <- system.file(\"extdata/athabasca_B12_20200911.tif\", package = \"SatRbedo\") dem <- system.file(\"extdata/athabasca_dem.tif\", package = \"SatRbedo\") blue <- preproc(grd = blue, outline = outline) green <- preproc(grd = green, outline = outline) red <- preproc(grd = red, outline = outline) nir <- preproc(grd = nir, outline = outline) swir1 <- preproc(grd = swir1, outline = outline) swir2 <- preproc(grd = swir2, outline = outline) dem <- preproc(grd = dem, outline = outline) SAA <- 164.8 SZA <- 48.9 VAA <- 90.9 VZA <- 5.2 slope <- terra::terrain(dem, v = \"slope\", neighbors = 4, unit = \"degrees\") aspect <- terra::terrain(dem, v = \"aspect\", neighbors = 4, unit = \"degrees\")  # Broadband albedo using green and near-infrared surface reflectance data th <- snow_or_ice(green, nir)$th alb <- albedo_sat(   SAA = SAA, SZA = SZA, VAA = VAA, VZA = VZA,   slope = slope, aspect = aspect, method = \"twobands\",   green = green, NIR = nir, th = th ) plot(alb[[3]]) # Broadband albedo  plot(alb[[4]]) # Flags   # Broadband albedo using blue, green, red and near-infrared surface reflectance data alb <- albedo_sat(   method = \"fourbands\",   blue = blue, green = green, red = red, NIR = nir ) plot(alb[[5]]) # Broadband albedo   # Broadband albedo using blue, red, near-infrared, and shortwave-infrared surface reflectance data th <- snow_or_ice(green, nir)$th alb <- albedo_sat(   SAA = SAA, SZA = SZA, VAA = VAA, VZA = VZA,   slope = slope, aspect = aspect, method = \"fivebands\",   blue = blue, green = green, red = red, NIR = nir, SWIR1 = swir1, SWIR2 = swir2, th = th ) plot(alb[[6]]) # Broadband albedo"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/cast_shadows.html","id":null,"dir":"Reference","previous_headings":"","what":"Cast shadows — cast_shadows","title":"Cast shadows — cast_shadows","text":"Calculates cast shadows matrix SpatRaster digital elevation model (DEM) given illumination direction.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/cast_shadows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cast shadows — cast_shadows","text":"","code":"cast_shadows(dem, SZA, SAA, dl = 0, sombra = dem)"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/cast_shadows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cast shadows — cast_shadows","text":"dem matrix SpatRaster. Digital elevation model representing terrain elevation regular grid. SZA SpatRaster numeric. Solar zenith angle degrees. SAA SpatRaster numeric. Solar azimuth angle degrees. dl numeric. Grid spacing. needed dem SpatRaster. sombra Returned matrix SpatRaster.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/cast_shadows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cast shadows — cast_shadows","text":"Returns object class input DEM (matrix SpatRaster), values 0 cast-shadowed pixels 1 -shaded pixels.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/cast_shadows.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cast shadows — cast_shadows","text":"cast_shadows() calls fortran routine called doshade scans DEM lines parallel sun direction. compares projection grid cells plane perpendicular sun determine whether exposed direct solar illumination shadowed neighbor objects, mountains. See Corripio (2003)  details. doshade subroutine originally written Javier Corripio shipped insol package. function optimized updated take advantage infrastructure provided terra package.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/cast_shadows.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cast shadows — cast_shadows","text":"Corripio JG (2003). “Vectorial algebra algorithms calculating terrain parameters DEMs solar radiation modelling mountainous terrain.” International Journal Geographical Information Science, 17(1), 1–23. doi:10.1080/713811744 .","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/cast_shadows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cast shadows — cast_shadows","text":"","code":"library(terra) dem <- system.file(\"extdata/athabasca_dem.tif\", package = \"SatRbedo\") dem <- terra::rast(dem) SZA <- 49 SAA <- 165 cs <- cast_shadows(dem, SZA, SAA) plot(cs, col = grey(0:1))"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/cfactor_BRDF.html","id":null,"dir":"Reference","previous_headings":"","what":"c-factor BRDF normalization — cfactor_BRDF","title":"c-factor BRDF normalization — cfactor_BRDF","text":"Calculates c-factor proposed Roy et al. (2016)  can used normalize surface reflectance data nadir BRDF adjusted reflectance (NBAR), convert NBAR observations -nadir surface reflectance. c-factor calculated based spectral kernel-based BRDF model. mathematical formulation kernels presented  Wanner et al. (1995), Lucht et al. (2000) Carlsen et al. (2020) .","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/cfactor_BRDF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"c-factor BRDF normalization — cfactor_BRDF","text":"","code":"cfactor_BRDF(SAA, SZA, VAA, VZA, NSZ, br = 1, hb = 2, band)"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/cfactor_BRDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"c-factor BRDF normalization — cfactor_BRDF","text":"SAA SpatRaster numeric. Solar azimuth angle degrees. SZA SpatRaster numeric. Solar zenith angle degrees. VAA SpatRaster numeric. Satellite sensor azimuth angle degrees. VZA SpatRaster numeric. Satellite sensor zenith angle degrees. NSZ numeric. NBAR solar zenith angle. prescribed NSZ obtained satellite product metadata calculated using algorithm code provided Li et al. (2019) . br numeric. Crown relative height parameter. Defaults 1.0. hb numeric. Shape parameter. Defaults 2.0. band character. Spectral band processed. six bands can considered: \"blue (0.43-0.45 um)\", \"green (0.53-0.59 u)\", \"red (0.64-0.67 um)\", \"NIR\" (near-infrared, 0.85-0.88 um), \"SWIR\" (shortwave-infrared, 1.57-1.65 um), \"SWIR2 (shortwave-infrared, 2.11-2.29 um)\".","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/cfactor_BRDF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"c-factor BRDF normalization — cfactor_BRDF","text":"Returns single numeric value SpatRaster c-factor values spectral band.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/cfactor_BRDF.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"c-factor BRDF normalization — cfactor_BRDF","text":"Carlsen T, Birnbaum G, Ehrlich , Helm V, Jäkel E, Schäfer M, Wendisch M (2020). “Parameterizing anisotropic reflectance snow surfaces airborne digital camera observations Antarctica.” Cryosphere, 14(11), 3959–3978. doi:10.5194/tc-14-3959-2020 . Li Z, Zhang HK, Roy DP (2019). “Investigation Sentinel-2 Bidirectional Reflectance Hot-Spot Sensing Conditions.” IEEE Transactions Geoscience Remote Sensing, 57(6), 3591–3598. doi:10.1109/TGRS.2018.2885967 . Lucht W, Schaaf CB, Strahler AH (2000). “algorithm retrieval albedo space using semiempirical BRDF models.” IEEE Transactions Geoscience Remote Sensing, 38(2), 977–998. doi:10.1109/36.841980 . Roy DP, Zhang HK, Ju J, Gomez-Dans JL, Lewis PE, Schaaf CB, Sun Q, Li J, Huang H, Kovalskyy V (2016). “general method normalize Landsat reflectance data nadir BRDF adjusted reflectance.” Remote Sensing Environment, 176, 255–271. doi:10.1016/j.rse.2016.01.023 . Wanner W, Li X, Strahler AH (1995). “derivation kernels kernel-driven models bidirectional reflectance.” Journal Geophysical Research, 100(D10), 21077. doi:10.1029/95JD02371 .","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/cfactor_BRDF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"c-factor BRDF normalization — cfactor_BRDF","text":"","code":"# Using data with numeric format cfactor_BRDF(SAA = 56.58, SZA = 35.6, VAA = 236.4, VZA = 1.00, NSZ = 34.97, band = \"NIR\") #> [1] 0.9966411  # Using SpatRaster data library(terra) m1 <- matrix(seq(from = 56.54, to = 56.67, length.out = 9), nrow = 3, ncol = 3) m2 <- matrix(seq(from = 35.54, to = 35.65, length.out = 9), nrow = 3, ncol = 3) m3 <- matrix(seq(from = 221.05, to = 259.06, length.out = 9), nrow = 3, ncol = 3) m4 <- matrix(seq(from = 0.53, to = 1.12, length.out = 9), nrow = 3, ncol = 3) SAA <- terra::rast(m1) SZA <- terra::rast(m2) VAA <- terra::rast(m3) VZA <- terra::rast(m4) cfactor_BRDF(SAA, SZA, VAA, VZA, NSZ = 34.97, band = \"NIR\") #> class       : SpatRaster  #> size        : 3, 3, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 3, 0, 3  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        :     lyr.1  #> min value   : 0.9966314  #> max value   : 0.9992424"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/f_BRDF.html","id":null,"dir":"Reference","previous_headings":"","what":"Anisotropy correction of reflected radiation over melting snow and glacier ice — f_BRDF","title":"Anisotropy correction of reflected radiation over melting snow and glacier ice — f_BRDF","text":"tool corrects anisotropy reflected radiation melting snow ice. given surface type, correction carried using empirical model Bidirectional Reflectance Distribution Function (BRDF) depends wavelength bands view-solar geometry. procedure applicable visible, near-infrared (NIR), shortwave-infrared (SWIR) wavelenghts. details parameterizations can found references list.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/f_BRDF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anisotropy correction of reflected radiation over melting snow and glacier ice — f_BRDF","text":"","code":"f_BRDF(SAA, SZA, VAA, VZA, slope, aspect, method, green, NIR, th)"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/f_BRDF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anisotropy correction of reflected radiation over melting snow and glacier ice — f_BRDF","text":"SAA SpatRaster numeric. Solar azimuth angle degrees. SZA SpatRaster numeric. Solar zenith angle degrees. VAA SpatRaster numeric. Satellite sensor azimuth angle degrees. VZA SpatRaster numeric. Satellite sensor zenith angle degrees. slope SpatRaster numeric. Surface slope degrees. aspect SpatRaster numeric. Surface aspect degrees. method character. Number spectral bands considered anisotropy correction. two options available: \"twobands\" (green NIR) using parameterizations Greuell De Ruyter De Wildt (1999)  ice Koks (2001)  snow, \"fivebands\" (blue, red, NIR, SWIR1, SWIR2) using methods described Ren et al. (2021) . green SpatRaster. Green band surface reflectance (0.53-0.59 um). NIR SpatRaster. Near-infrared band surface reflectance (0.85-0.88 um). th numeric. NDSII threshold discriminate snow ice.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/f_BRDF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anisotropy correction of reflected radiation over melting snow and glacier ice — f_BRDF","text":"Returns SpatRaster two layers method=\"twobands\" five layers method=\"fivebands\". layer contains anisotropic reflection factors (f) spectral band surface type (snow ice). f values represent difference satellite albedo retrievals surface reflectance observations.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/f_BRDF.html","id":"notes","dir":"Reference","previous_headings":"","what":"Notes","title":"Anisotropy correction of reflected radiation over melting snow and glacier ice — f_BRDF","text":"f calculated method=\"twobands\" green NIR surface reflectance values greater one pixels SZA relative inclined surface >65.51° snow >74.2° ice. method=\"fivebands\", f calculated SZA relative inclined surface >70.9° snow >57.6° ice.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/f_BRDF.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Anisotropy correction of reflected radiation over melting snow and glacier ice — f_BRDF","text":"De Ruyter De Wildt MS, Oerlemans J, Björnsson H (2002). “method monitoring glacier mass balance using satellite albedo measurements: application Vatnajökull, Iceland.” Journal Glaciology, 48(161), 267–278. doi:10.3189/172756502781831458 . Greuell W, De Ruyter De Wildt M (1999). “Anisotropic reflection melting glacier ice: measurements parametrizations Landsat TM Bands 2 4.” Remote Sensing Environment, 70(3), 265–277. doi:10.1016/S0034-4257(99)00043-7 . Koks M (2001). Anisotropic reflection radiation melting snow. Landsat TM bands 2 4. Master's thesis, Universiteit Utrecht. Instituut voor Marien en Atmosferisch Onderzoek Utrecht (IMAU). Ren S, Miles ES, Jia L, Menenti M, Kneib M, Buri P, McCarthy MJ, Shaw TE, Yang W, Pellicciotti F (2021). “Anisotropy parameterization development evaluation glacier surface albedo retrieval satellite observations.” Remote Sensing, 13(9), 1714. doi:10.3390/rs13091714 .","code":""},{"path":[]},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/f_BRDF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anisotropy correction of reflected radiation over melting snow and glacier ice — f_BRDF","text":"","code":"library(terra) outline <- system.file(\"extdata/athabasca_outline.shp\", package = \"SatRbedo\") green <- system.file(\"extdata/athabasca_B03_20200911.tif\", package = \"SatRbedo\") nir <- system.file(\"extdata/athabasca_B8A_20200911.tif\", package = \"SatRbedo\") dem <- system.file(\"extdata/athabasca_dem.tif\", package = \"SatRbedo\") green <- preproc(grd = green, outline = outline) nir <- preproc(grd = nir, outline = outline) dem <- preproc(grd = dem, outline = outline) SAA <- 164.8 SZA <- 48.9 VAA <- 90.9 VZA <- 5.2 slope <- terra::terrain(dem, v = \"slope\", neighbors = 4, unit = \"degrees\") aspect <- terra::terrain(dem, v = \"aspect\", neighbors = 4, unit = \"degrees\")  # f coefficients for two bands th <- snow_or_ice(green, nir)$th f <- f_BRDF(   SAA = SAA, SZA = SZA, VAA = VAA, VZA = VZA,   slope = slope, aspect = aspect,   method = \"twobands\", green = green, NIR = nir,   th = th ) plot(f[[1]])  plot(f[[2]])   # f coefficients for five bands th <- snow_or_ice(green, nir)$th f <- f_BRDF(   SAA = SAA, SZA = SZA, VAA = VAA, VZA = VZA,   slope = slope, aspect = aspect,   method = \"fivebands\", green = green, NIR = nir,   th = th ) plot(f[[1]])  plot(f[[2]])  plot(f[[3]])  plot(f[[4]])  plot(f[[5]])"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/hill_shade.html","id":null,"dir":"Reference","previous_headings":"","what":"Topographic hillshading — hill_shade","title":"Topographic hillshading — hill_shade","text":"Computes hypothetical illumination surface setting position sun calculating illumination values grid cell DEM. hill_shade function based upon vectorial algebra algorithms developed Corripio (2003) . function optimized updated take advantage infrastructure provided terra package.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/hill_shade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Topographic hillshading — hill_shade","text":"","code":"hill_shade(dem, SZA, SAA)"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/hill_shade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Topographic hillshading — hill_shade","text":"dem SpatRaster. Digital elevation model representing terrain elevation regular grid. SZA SpatRaster numeric. Solar zenith angle degrees. SAA SpatRaster numeric. Solar azimuth angle degrees.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/hill_shade.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Topographic hillshading — hill_shade","text":"Returns hillshade map SpatRaster format.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/hill_shade.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Topographic hillshading — hill_shade","text":"Corripio JG (2003). “Vectorial algebra algorithms calculating terrain parameters DEMs solar radiation modelling mountainous terrain.” International Journal Geographical Information Science, 17(1), 1–23. doi:10.1080/713811744 .","code":""},{"path":[]},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/hill_shade.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Topographic hillshading — hill_shade","text":"","code":"library(terra) dem <- system.file(\"extdata/athabasca_dem.tif\", package = \"SatRbedo\") dem <- terra::rast(dem) SZA <- 49 SAA <- 165 hs <- hill_shade(dem, SZA, SAA) plot(hs, col = grey(1:100 / 100))"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/normal_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Unit normal vector of a surface — normal_vector","title":"Unit normal vector of a surface — normal_vector","text":"Computes unit vector normal grid cell digital elevation model.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/normal_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unit normal vector of a surface — normal_vector","text":"","code":"normal_vector(dem, dlx = 0, dly = dlx, cArea = FALSE)"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/normal_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unit normal vector of a surface — normal_vector","text":"dem matrix SpatRaster. Digital elevation model representing terrain elevation regular grid. dlx numeric. Spatial resolution along x axis meters. dly numeric. Spatial resolution along y axis meters. cArea logical. TRUE, returns surface area grid cell. default returns gradient.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/normal_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unit normal vector of a surface — normal_vector","text":"Returns 3D array number rows columns DEM three layers third dimension corresponding (x, y, z) components normal vectors grid cells. cArea TRUE, result 2D matrix surface area grid cell.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/normal_vector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Unit normal vector of a surface — normal_vector","text":"Mathematically, vector normal inclined surface, represented plane enclosed four data points (see Fig. 1 Corripio 2003) , defined average cross products vectors along sides grid cell. definition, length vector equal surface area grid cell. function originally written Javier Corripio part insol package. function optimized updated take advantage infrastructure provided terra package.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/normal_vector.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Unit normal vector of a surface — normal_vector","text":"Corripio JG (2003). “Vectorial algebra algorithms calculating terrain parameters DEMs solar radiation modelling mountainous terrain.” International Journal Geographical Information Science, 17(1), 1–23. doi:10.1080/713811744 .","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/preproc.html","id":null,"dir":"Reference","previous_headings":"","what":"Satellite data pre-processing — preproc","title":"Satellite data pre-processing — preproc","text":"preproc() crops input grid specified extent polygon SpatExtent, reprojects grid specified coordinate system, converts data integer floating point using offset scale factor.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/preproc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Satellite data pre-processing — preproc","text":"","code":"preproc(   grd,   drivers = NULL,   outline = NULL,   coords = NULL,   add_offset = 0,   scale_factor = 1 )"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/preproc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Satellite data pre-processing — preproc","text":"grd filename (character) SpatRaster raster processed, one GDAL's raster drivers. drivers character. GDAL drivers consider outline filename (character) shapefile containing outline area interest, .shp format, SpatExtent giving vector length four (xmin, xmax, ymin, ymax). coords filename (character) SpatRaster raster coordinate system definition. Alternatively, coordinate reference system (CRS) description can provided. case, CRS can described using PROJ-string (e.g., \"+proj=longlat +datum=WGS84\") WKT format (e.g., \"EPSG:4326\"). add_offset band-specific offset added grid value. Defaults zero. scale_factor band-specific scale factor applied grid value. Defaults one.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/preproc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Satellite data pre-processing — preproc","text":"Returns pre-processed SpatRaster grid.","code":""},{"path":[]},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/preproc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Satellite data pre-processing — preproc","text":"","code":"# uncorrected grid f <- system.file(\"extdata/athabasca_B03_20200911.tif\", package = \"SatRbedo\") preproc(grd = f) #> class       : SpatRaster  #> size        : 207, 216, 1  (nrow, ncol, nlyr) #> resolution  : 30, 30  (x, y) #> extent      : 477840, 484320, 5778300, 5784510  (xmin, xmax, ymin, ymax) #> coord. ref. : WGS 84 / UTM zone 11N (EPSG:32611)  #> source(s)   : memory #> varname     : athabasca_B03_20200911  #> name        :   Green  #> min value   : -0.0829  #> max value   :  1.3276   # crop grid g <- system.file(\"extdata/athabasca_B03_20200911.tif\", package = \"SatRbedo\") v <- system.file(\"extdata/athabasca_outline.shp\", package = \"SatRbedo\") preproc(grd = g, outline = v) #> class       : SpatRaster  #> size        : 205, 214, 1  (nrow, ncol, nlyr) #> resolution  : 30, 30  (x, y) #> extent      : 477870, 484290, 5778330, 5784480  (xmin, xmax, ymin, ymax) #> coord. ref. : WGS 84 / UTM zone 11N (EPSG:32611)  #> source(s)   : memory #> varname     : athabasca_B03_20200911  #> name        :   Green  #> min value   : -0.0323  #> max value   :  1.2973   # crop and reproject grid g <- system.file(\"extdata/athabasca_B03_20200911.tif\", package = \"SatRbedo\") v <- system.file(\"extdata/athabasca_outline.shp\", package = \"SatRbedo\") preproc(grd = g, outline = v, coords = \"+proj=longlat +datum=WGS84\") #> class       : SpatRaster  #> size        : 151, 256, 1  (nrow, ncol, nlyr) #> resolution  : 0.0003683312, 0.0003683312  (x, y) #> extent      : -117.3239, -117.2296, 52.15492, 52.21054  (xmin, xmax, ymin, ymax) #> coord. ref. : +proj=longlat +datum=WGS84 +no_defs  #> source(s)   : memory #> name        :       Green  #> min value   : -0.03039604  #> max value   :  1.27545702   preproc(grd = g, outline = v, coords = \"EPSG:4326\") #> class       : SpatRaster  #> size        : 151, 256, 1  (nrow, ncol, nlyr) #> resolution  : 0.0003683312, 0.0003683312  (x, y) #> extent      : -117.3239, -117.2296, 52.15492, 52.21054  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> name        :       Green  #> min value   : -0.03039604  #> max value   :  1.27545702   # Transform grid values library(terra) g <- system.file(\"extdata/athabasca_B03_20200911.tif\", package = \"SatRbedo\") orig <- preproc(grd = g) minmax(orig) #>       Green #> min -0.0829 #> max  1.3276 new <- preproc(grd = g, add_offset = 5, scale_factor = 10) minmax(new) #>      Green #> min  4.171 #> max 18.276"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/shadow_removal.html","id":null,"dir":"Reference","previous_headings":"","what":"Topographic shadows — shadow_removal","title":"Topographic shadows — shadow_removal","text":"Detects removes self-shadowed pixels (.e., pixels aspect angles oriented away sun) cast shadows (.e, pixels facing towards direction sun sunlight blocked neighbor topographic features mountains). Self-shadowed pixels detected angle sun vector normal grid cell's surface higher \\(\\frac{\\pi}{2}\\). Cast shadows calculated using cast_shadows() function.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/shadow_removal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Topographic shadows — shadow_removal","text":"","code":"shadow_removal(dem, SZA, SAA, mask = TRUE)"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/shadow_removal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Topographic shadows — shadow_removal","text":"dem SpatRaster. Digital elevation model representing terrain elevation regular grid. SZA SpatRaster numeric. Solar zenith angle degrees. SAA SpatRaster numeric. Solar azimuth angle degrees. mask logical. TRUE, shadow pixels masked.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/shadow_removal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Topographic shadows — shadow_removal","text":"Returns SpatRaster topographic shadows removed.","code":""},{"path":[]},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/shadow_removal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Topographic shadows — shadow_removal","text":"","code":"library(terra) dem <- system.file(\"extdata/athabasca_dem.tif\", package = \"SatRbedo\") dem <- terra::rast(dem) SZA <- 49 SAA <- 165 msk <- shadow_removal(dem, SZA, SAA, mask = TRUE) plot(msk, col = \"blue\")   # Overlay an RGB composite with the shadow masks blue <- terra::rast(system.file(\"extdata/athabasca_B02_20200911.tif\", package = \"SatRbedo\")) green <- terra::rast(system.file(\"extdata/athabasca_B03_20200911.tif\", package = \"SatRbedo\")) red <- terra::rast(system.file(\"extdata/athabasca_B04_20200911.tif\", package = \"SatRbedo\")) r <- c(stretch(blue), stretch(green), stretch(red)) RGB(r) <- c(3, 2, 1) plot(r) msk <- shadow_removal(dem, SZA, SAA, mask = FALSE) plot(msk, col = grey(0:1), alpha = 0.2, add = TRUE)"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/snow_or_ice.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic discrimination of snow and ice cover types — snow_or_ice","title":"Automatic discrimination of snow and ice cover types — snow_or_ice","text":"Calculates Normalized Difference Snow Ice Index (NDSII) (Keshri et al. 2009)  discriminate snow ice surfaces. discrimination performed using automatic threshold selection method based Otsu algorithm (Otsu 1979) .","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/snow_or_ice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic discrimination of snow and ice cover types — snow_or_ice","text":"","code":"snow_or_ice(green, NIR)"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/snow_or_ice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic discrimination of snow and ice cover types — snow_or_ice","text":"green SpatRaster. Green band surface reflectance (0.53-0.59 um). NIR SpatRaster. Near-infrared band surface reflectance (0.85-0.88 um).","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/snow_or_ice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatic discrimination of snow and ice cover types — snow_or_ice","text":"Returns list two objects. first component NDSII SpatRaster second component provides optimal threshold discriminate snow ice surfaces.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/snow_or_ice.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Automatic discrimination of snow and ice cover types — snow_or_ice","text":"Keshri AK, Shukla , Gupta RP (2009). “ASTER ratio indices supraglacial terrain mapping.” International Journal Remote Sensing, 30(2), 519–524. doi:10.1080/01431160802385459 . Otsu N (1979). “Threshold Selection Method Gray-Level Histograms.” IEEE Transactions Systems, Man, Cybernetics, 9(1), 62–66. doi:10.1109/TSMC.1979.4310076 .","code":""},{"path":[]},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/snow_or_ice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automatic discrimination of snow and ice cover types — snow_or_ice","text":"","code":"green <- system.file(\"extdata/athabasca_B03_20200911.tif\", package = \"SatRbedo\") nir <- system.file(\"extdata/athabasca_B8A_20200911.tif\", package = \"SatRbedo\") outline <- system.file(\"extdata/athabasca_outline.shp\", package = \"SatRbedo\") green <- preproc(grd = green, outline = outline) nir <- preproc(grd = nir, outline = outline) res <- snow_or_ice(green, nir)  # Plot NDSII library(terra) plot(res$NDSII, range = c(-0.5, 0.5))   # Plot a cover type binary map (snow/ice) library(terra) plot(res$NDSII > res$th, type = \"classes\", col = c(\"#FFFFC8\", \"#00407F\"), levels = c(\"snow\", \"ice\"))"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/sun_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Solar vector — sun_vector","title":"Solar vector — sun_vector","text":"Computes unit vector direction sun based solar azimuth zenith angles.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/sun_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solar vector — sun_vector","text":"","code":"sun_vector(zenith, azimuth)"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/sun_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solar vector — sun_vector","text":"zenith SpatRaster numeric. Solar zenith angle degrees. azimuth SpatRaster numeric. Solar azimuth angle degrees.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/sun_vector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solar vector — sun_vector","text":"Given spherical coordinates (radius = 1, zenith, azimuth angles), sun_vector() function gives (x, y, z) coordinates unit normal vector pointing towards sun, X-axis positive eastwards, Y-axis positive southwards, Z along Earth radius positive upwards (Corripio 2003) .","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/sun_vector.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Solar vector — sun_vector","text":"Corripio JG (2003). “Vectorial algebra algorithms calculating terrain parameters DEMs solar radiation modelling mountainous terrain.” International Journal Geographical Information Science, 17(1), 1–23. doi:10.1080/713811744 .","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/topo_corr.html","id":null,"dir":"Reference","previous_headings":"","what":"Topographic correction — topo_corr","title":"Topographic correction — topo_corr","text":"tool corrects surface reflectance effects topography. objective topographic correction compensate differences solar illumination minimize variability observed reflectance similar targets obtain equivalent reflectance values flat terrain. empirical methods provided suitable mountain environments rugged topography non-Lambertian surface properties. details methods can found references .","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/topo_corr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Topographic correction — topo_corr","text":"","code":"topo_corr(band, dem, SAA, SZA, method = \"tanrotation\", IC_min = NULL)"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/topo_corr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Topographic correction — topo_corr","text":"band SpatRaster. Spectral band corrected. dem SpatRaster. Digital elevation model representing terrain elevation regular grid. SAA SpatRaster numeric. Solar azimuth angle degrees. SZA SpatRaster numeric. Solar zenith angle degrees. method character. Topographic correction model used. Two options available: \"tanrotation\" (implements rotation model proposed Tan et al. 2010) , \"ccorrection\" (C model, Teillet et al. 1982) . IC_min numeric. Minimum incidence angle mask regions low illumination.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/topo_corr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Topographic correction — topo_corr","text":"Returns list two objets. first component SpatRaster two layers providing illumination condition (IC) corrected surface reflectance, second component contains values empirical parameters obtained topographic correction model.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/topo_corr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Topographic correction — topo_corr","text":"Chen R, Yin G, Zhao W, Yan K, Wu S, Hao D, Liu G (2023). “Topographic Correction Optical Remote Sensing Images Mountainous Areas: systematic review.” IEEE Geoscience Remote Sensing Magazine, 11(4), 125–145. doi:10.1109/MGRS.2023.3311100 . Riaño D, Chuvieco E, Salas J, Aguado (2003). “Assessment different topographic corrections Landsat-TM data mapping vegetation types.” IEEE Transactions Geoscience Remote Sensing, 41(5), 1056–1061. doi:10.1109/TGRS.2003.811693 . Tan B, Masek JG, Wolfe R, Gao F, Huang C, Vermote EF, Sexton JO, Ederer G (2013). “Improved forest change detection terrain illumination corrected Landsat images.” Remote Sensing Environment, 136, 469–483. doi:10.1016/j.rse.2013.05.013 . Tan B, Wolfe R, Masek J, Gao F, Vermote EF (2010). “illumination correction algorithm Landsat-TM data.” 2010 IEEE International Geoscience Remote Sensing Symposium, 1964-1967. doi:10.1109/IGARSS.2010.5653492 . Teillet PM, Guindon B, Goodenough DG (1982). “Slope-Aspect Correction Multispectral Scanner Data.” Canadian Journal Remote Sensing, 8(2), 84–106. doi:10.1080/07038992.1982.10855028 .","code":""},{"path":[]},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/topo_corr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Topographic correction — topo_corr","text":"","code":"library(terra) outline <- system.file(\"extdata/athabasca_outline.shp\", package = \"SatRbedo\") nir <- system.file(\"extdata/athabasca_B8A_20200911.tif\", package = \"SatRbedo\") dem <- system.file(\"extdata/athabasca_dem.tif\", package = \"SatRbedo\") nir <- preproc(grd = nir, outline = outline) dem <- preproc(grd = dem, outline = outline) SAA <- 164.8 SZA <- 48.9  # Topographic correction using method=\"tanrotation\" corr <- topo_corr(band = nir, dem = dem, SAA = SAA, SZA = SZA, method = \"tanrotation\") plot(corr$bands[[1]]) # plot IC  plot(corr$bands[[2]]) # plot corrected surface reflectance   # Topographic correction using method=\"ccorrection\" corr <- topo_corr(band = nir, dem = dem, SAA = SAA, SZA = SZA, method = \"ccorrection\", IC_min = 0.3) plot(corr$bands[[2]]) # plot corrected surface reflectance"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/topo_splot.html","id":null,"dir":"Reference","previous_headings":"","what":"Reflectance-IC scatterplot — topo_splot","title":"Reflectance-IC scatterplot — topo_splot","text":"function creates scatterplot surface reflectance vs. illumination condition (IC). plot can used explore dependency original topographically-corrected surface reflectance data IC.","code":""},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/topo_splot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reflectance-IC scatterplot — topo_splot","text":"","code":"topo_splot(IC, band, maxcell = 1e+05)"},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/topo_splot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reflectance-IC scatterplot — topo_splot","text":"IC SpatRaster. Illumination condition. band SpatRaster. Spectral band processed. maxcell positive integer. Maximum number cells use plot","code":""},{"path":[]},{"path":"https://pabl1t0x.github.io/SatRbedo/reference/topo_splot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reflectance-IC scatterplot — topo_splot","text":"","code":"outline <- system.file(\"extdata/athabasca_outline.shp\", package = \"SatRbedo\") nir <- system.file(\"extdata/athabasca_B8A_20200911.tif\", package = \"SatRbedo\") dem <- system.file(\"extdata/athabasca_dem.tif\", package = \"SatRbedo\") nir <- preproc(grd = nir, outline = outline) dem <- preproc(grd = dem, outline = outline) SAA <- 164.8 SZA <- 48.9 corr <- topo_corr(band = nir, dem = dem, SAA = SAA, SZA = SZA, method = \"tanrotation\")  # Scatterplot of IC vs. uncorrected surface reflectance topo_splot(corr$bands[[1]], nir)   # Scatterplot of IC vs. topographically-corrected surface reflectance topo_splot(corr$bands[[1]], corr$bands[[2]])"}]
